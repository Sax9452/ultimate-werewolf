import { useGameStore } from '../store/gameStore';
import { motion } from 'framer-motion';

function GameLog() {
  const { logs } = useGameStore();

  // ‚≠ê ‡∏Å‡∏£‡∏≠‡∏á logs ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà "‡∏ä‡∏∑‡πà‡∏≠ ‡∏ï‡∏≤‡∏¢" (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏)
  const getSimplifiedMessage = (log) => {
    const msg = log.message;
    
    // ‚≠ê ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ log ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó 'death' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    if (log.type === 'death') {
      let name = null;
      
      // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á death logs:
      // 1. "üê∫ ‡∏´‡∏°‡∏≤‡∏õ‡πà‡∏≤‡πÇ‡∏à‡∏°‡∏ï‡∏µ ‡∏ä‡∏∑‡πà‡∏≠ (‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó)" - ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á "‡πÇ‡∏à‡∏°‡∏ï‡∏µ"
      // 1b. "üê∫üí¢ ‡∏´‡∏°‡∏≤‡∏õ‡πà‡∏≤‡πÇ‡∏à‡∏°‡∏ï‡∏µ ‡∏ä‡∏∑‡πà‡∏≠ ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2! (Wolf Cub Effect)" - ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á "‡πÇ‡∏à‡∏°‡∏ï‡∏µ"
      if (msg.includes('‡πÇ‡∏à‡∏°‡∏ï‡∏µ')) {
        // ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡πÅ‡∏ö‡∏ö‡∏°‡∏µ "‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà" ‡∏Å‡πà‡∏≠‡∏ô (Wolf Cub Effect)
        let match = msg.match(/‡πÇ‡∏à‡∏°‡∏ï‡∏µ\s+(.+?)\s+‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà/);
        if (!match) {
          // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏´‡∏≤‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏°‡∏µ‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö)
          match = msg.match(/‡πÇ‡∏à‡∏°‡∏ï‡∏µ\s+(.+?)\s*\(/);
        }
        if (match) name = match[1];
      }
      // 2. "üßô‚Äç‚ôÄÔ∏è ‡πÅ‡∏°‡πà‡∏°‡∏î‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏û‡∏¥‡∏©‡∏Å‡∏±‡∏ö ‡∏ä‡∏∑‡πà‡∏≠ (‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó)" - ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á "‡∏Å‡∏±‡∏ö"
      else if (msg.includes('‡∏¢‡∏≤‡∏û‡∏¥‡∏©‡∏Å‡∏±‡∏ö')) {
        const match = msg.match(/‡∏Å‡∏±‡∏ö\s+(.+?)\s*\(/);
        if (match) name = match[1];
      }
      // 3. "üèπ ‡∏ä‡∏∑‡πà‡∏≠1 ‡∏¢‡∏¥‡∏á ‡∏ä‡∏∑‡πà‡∏≠2 (‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó)" - ‡∏ä‡∏∑‡πà‡∏≠2 ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á "‡∏¢‡∏¥‡∏á"
      else if (msg.includes('‡∏¢‡∏¥‡∏á')) {
        const match = msg.match(/‡∏¢‡∏¥‡∏á\s+(.+?)\s*\(/);
        if (match) name = match[1];
      }
      // 4. "‚öñÔ∏è ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏ß‡∏ï N ‡πÄ‡∏™‡∏µ‡∏¢‡∏á (‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó)" - ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á emoji ‡∏ï‡∏£‡∏á‡πÜ
      else if (msg.includes('‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏ß‡∏ï')) {
        const match = msg.match(/‚öñÔ∏è\s+(.+?)\s+‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏ß‡∏ï/);
        if (match) name = match[1];
      }
      // 5. "üíò ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ï‡∏≤‡∏¢‡∏ï‡∏≤‡∏° (Love Network)" - ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á emoji
      else if (msg.includes('‡∏ï‡∏≤‡∏¢‡∏ï‡∏≤‡∏°')) {
        const match = msg.match(/üíò\s+(.+?)\s+‡∏ï‡∏≤‡∏¢‡∏ï‡∏≤‡∏°/);
        if (match) name = match[1];
      }
      
      if (name) {
        return `üíÄ ${name.trim()} ‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏à‡∏±‡∏î`;
      }
    }
    
    // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á log ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (protect, inspect, vote, info, poison, convert, heal)
    return null;
  };

  // ‚≠ê ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° logs ‡∏ï‡∏≤‡∏° day ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏£‡∏ß‡∏°‡∏Ñ‡∏∑‡∏ô+‡πÄ‡∏ä‡πâ‡∏≤)
  const groupedLogs = logs
    .map((log) => ({ ...log, simplifiedMessage: getSimplifiedMessage(log) }))
    .filter(log => log.simplifiedMessage !== null)
    .reduce((acc, log) => {
      const key = `day-${log.day}`; // ‡πÉ‡∏ä‡πâ day ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÑ‡∏°‡πà‡πÅ‡∏¢‡∏Å phase
      if (!acc[key]) {
        acc[key] = {
          day: log.day,
          deaths: []
        };
      }
      acc[key].deaths.push(log.simplifiedMessage);
      return acc;
    }, {});

  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô array ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° day
  const groupedArray = Object.values(groupedLogs).sort((a, b) => a.day - b.day);

  return (
    <div className="card">
      <h3 className="text-xl font-bold mb-4">üìú ‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå</h3>
      <div className="h-48 overflow-y-auto space-y-3">
        {groupedArray.length === 0 ? (
          <div className="text-center text-slate-400 mt-8">
            <div className="text-4xl mb-2">üåô</div>
            <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå...</p>
          </div>
        ) : (
          groupedArray.map((group, groupIdx) => (
            <motion.div
              key={`day-${group.day}`}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: groupIdx * 0.1 }}
              className="p-3 bg-slate-700 rounded-lg"
            >
              {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ - ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
              <div className="text-sm font-bold mb-2 text-amber-300">
                ‚òÄÔ∏è ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {group.day}
              </div>
              
              {/* ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏ï‡∏≤‡∏¢ (‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡πâ‡∏≤) */}
              <div className="space-y-1">
                {group.deaths.map((death, idx) => (
                  <div key={idx} className="text-slate-200 text-sm">
                    {death}
                  </div>
                ))}
              </div>
            </motion.div>
          ))
        )}
      </div>
    </div>
  );
}

export default GameLog;

